---
params:
  county: "Nairobi"
  survey_name: "Biobehavioral Survey"
  population: "Key Populations"
title: "BIOBEHAVIORAL SURVEY AMONG KEY POPULATIONS IN `r params$county` , KENYA, 2024"
format: docx
css: custom.css
authors:
    name: BBS Team
    affiliation: NASCOP, UCSF, CDC, USAID
    roles: writing
    corresponding: true
bibliography: references.bib
notebook-links: false
---

```{r}
#| message: false
#| results: hide
#| echo: false
#| warning: false


county <- ifelse(is.null(params$county), 'ALL', params$county)
survey_name <- params$survey_name
population <- params$population
county
```

```{r}
#| message: false
#| results: hide
#| echo: false
#| warning: false

library(tidyverse)
library(readxl)
library(scales)
library(DT)
library(gt)
library(haven)
library(rio)
library(janitor)
library(data.table)
library(sjlabelled)
library(sjmisc)
library(ggtext)
library(scales)
library(prismatic)
library(gtsummary)
library(survey)
library(srvyr)
library(psych)
library(extrafont)
library(likert)
library(broom)
library(prettyunits)
library(tidytext)
```

```{r}
#| message: false
#| results: hide
#| echo: false
#| warning: false

theme_set(
  theme_minimal(base_family = "sans") +
    theme(plot.title = element_text(hjust = 0.5),
          panel.grid.major = element_blank(),
          panel.grid.minor = element_blank(),
          axis.title.x = element_blank(),
          axis.title.y = element_blank())
)
```

```{r}
#| message: false
#| results: hide
#| echo: false
#| warning: false

basic_info <- rio::import("data/Data Template.xlsx", sheet = "SURVEY_INFO") |>
  filter(COUNTY == county)

sample_size <- rio::import("data/Data Template.xlsx", sheet = "SAMPLE_SIZE")|>
  filter(COUNTY == county)

response_rates <- rio::import("data/Data Template.xlsx", sheet = "RESPONSE_RATES")|>
  filter(COUNTY == county)

prev_supp_pop <- rio::import("data/Data Template.xlsx", sheet = "PREVALENCE_SUPPRESSION_POP")|>
  filter(COUNTY == county)

respondent_dist <- rio::import("data/Data Template.xlsx", sheet = "RESPONDENT_DISTRIBUTION")|>
  filter(COUNTY == county)

prev_supp_age <- rio::import("data/Data Template.xlsx", sheet = "PREVALENCE_SUPPRESSION_AGE")|>
  filter(COUNTY == county)

unconditional_95s <- rio::import("data/Data Template.xlsx", sheet = "UNCONDITIONAL_95_95_95")|>
  filter(COUNTY == county)

conditional_95s <- rio::import("data/Data Template.xlsx", sheet = "CONDITIONAL_95_95_95")|>
  filter(COUNTY == county)

sti_data <- rio::import("data/Data Template.xlsx", sheet = "STI_PREVALENCE")|>
  filter(COUNTY == county)

hiv_prevalence <- rio::import("data/Data Template.xlsx", sheet = "HIV_PREVALENCE")|>
  filter(COUNTY == county)

# Lab data
lab_data <- read_csv("data/BBS_HTS_SUMMARY_DATA.csv") |>
  mutate(
    KP_TOPOLOGY = case_when(
      COUNTY == "Trans Nzoia" & KP_TOPOLOGY == "NONE" ~ "FSW",
      TRUE ~ KP_TOPOLOGY
    ),
    COUNTY = case_when(
      COUNTY == "Trans Nzoia" ~ "Nakuru",
      TRUE ~ COUNTY
    )
  )

```

## BACKGROUND

The `r survey_name` among `r population` was conducted between (INSERT MONTH/YEAR) and (INSERT MONTH/YEAR) in (LIST SURVEY SITES) to estimate HIV prevalence, viral load suppression among people living with HIV, progress toward the Joint United Nations Programme on HIV/AIDS (UNAIDS) 95-95-95 HIV targets and the number of (INSERT KEY POPULATION) in `r county`. The surveys sampled a total of (INSERT TOTAL NUMBER OF PARTICIPANTS) (INSERT KEY POPULATION) using (INSERT SAMPLING METHODOLOGY (e.g., Respondent Driven Sampling (RDS)): (INSERT NUMBER OF PARTICIPANTS BY SURVEY SITE). IF APPLICABLE: Each survey site’s data was weighted using self-reported network size and Gile’s Sequential Sampling in RDS-Analyst. The survey was conducted by (INSERT LEAD ORGANIZATION/INSTITUTION) and (INSERT RELEVANT MOH) with funding from the U.S. President’s Emergency Plan for AIDS Relief (PEPFAR) and technical assistance provided by the U.S. Centers for Disease Control and Prevention (CDC).

## OBJECTIVES

-   Estimate the prevalence of HIV among `r population` in `r str_to_sentence(county)`
-   Estimate viral load suppression (<200 copies/mL) among `r population` in `r str_to_sentence(county)`
-   Estimate progress toward UNAIDS 95-95-95 targets among `r population` in `r str_to_sentence(county)`
-   Estimate the population size of `r population` in `r str_to_sentence(county)`

## SURVEY SITES AND SAMPLE SIZE

Each survey site’s data was weighted using self-reported network size and Gile’s Sequential Sampling in Respondent Driven Sampling.

```{r}
#| message: false
#| echo: false
#| warning: false

# Generate GT table
table <- sample_size %>%
  filter(COUNTY == county) %>%
  mutate(COUNTY = str_to_sentence(COUNTY))%>%
  gt() %>%
  tab_style(
    style = list(cell_borders(sides = "all", color = "gray", weight = px(1)),
                 cell_text(weight = "bold", color = "black")),
    locations = cells_body()
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold", color = "black"),
      cell_fill(color = "#FFFDD0")
    ),
    locations = cells_column_labels(everything())
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold", color = "black"),
      cell_fill(color = "#FFFDD0")
    ),
    locations = cells_column_spanners()
  ) %>%
  opt_table_font(
    font = list(
      google_font(name = "Cambria")
    )
  )%>%
  cols_label(
    SURVEY_SITE = "Survey Site",
    SAMPLE_SIZE = "Sample size"
  ) %>%
tab_options(table.width = pct(100), 
            data_row.padding = px(2))

# Print the table
table

```

## ELIGIBILITY SCREENING


## INTERVIEWING

## BIOMARKER TESTING PROCEDURES


## RETURN OF RESULTS


## DATA ANALYSIS AND WEIGHTING 


## POPULATION SIZE ESTIMATES


## KEY RESULTS

```{r}
#| message: false
#| echo: false
#| warning: false

response_rates %>%
  filter(COUNTY == county) %>%
  mutate(COUNTY = str_to_sentence(COUNTY),
         `Response rate` = label_percent(accuracy = .1)(CONSENTED / ELIGIBLE))%>%
  select(-c(COUNTY)) %>%
  gt() %>%
  tab_style(
    style = list(cell_borders(sides = "all", color = "gray", weight = px(1)),
                 cell_text(weight = "bold", color = "black")),
    locations = cells_body()
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold", color = "black"),
      cell_fill(color = "#FFFDD0")
    ),
    locations = cells_column_labels(everything())
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold", color = "black"),
      cell_fill(color = "#FFFDD0")
    ),
    locations = cells_column_spanners()
  ) %>%
  opt_table_font(
    font = list(
      google_font(name = "Cambria")
    )
  )%>%
  cols_label(
    SCREENED = "Screened",
    ELIGIBLE = "Eligible",
    CONSENTED = "Consented for Interview",
    INTERVIEWED = "Interviewed",
    BLOOD_COLLECTED = "Consented for Blood"
  ) %>%
tab_options(table.width = pct(100), 
            data_row.padding = px(2))

```

## HIV PREVALENCE, VIRAL LOAD SUPPRESSION AND POPULATION SIZE ESTIMATE, BY TYPOLOGY

Among `r population` aged (INSERT AGE CRITERIA) who (INSERT ANY OTHER ELIGIBILITY CRITERIA), (INSERT DESCRIPTION OF DATA (e.g., HIV prevalence was similar across survey cities. Typology 1 has an estimated HIV prevalence of XX.X% and typology 2 had an estimated HIV prevalence of XX.X%.)).
Population size estimates (PSE) for each typology, shown in the table below, were derived using (insert method(s)). 

```{r}
#| message: false
#| echo: false
#| warning: false

prev_supp_pop %>%
  filter(COUNTY == county) %>%
  select(-c(COUNTY)) %>%
  mutate(`HIV Prevalence` = paste0(HIV_PREVALENCE, 
                                  " (",HIV_PREVALENCE_LOWER, "-",
                                  HIV_PREVALENCE_UPPER, ")"),
         `Viral Load Suppression` = paste0(VIRAL_LOAD_SUPPRESSION, 
                                  " (",VIRAL_LOAD_SUPPRESSION_LOWER, "-",
                                  VIRAL_LOAD_SUPPRESSION_UPPER, ")"),
         `Consensus Population Size Estimate` = paste0(CONSENSUS_POPULATION_SIZE_ESTIMATE, 
                                  " (",CONSENSUS_POPULATION_SIZE_ESTIMATE_LOWER, "-",
                                  CONSENSUS_POPULATION_SIZE_ESTIMATE_UPPER, ")")
         
         ) %>%
  select(TYPOLOGY, `HIV Prevalence`, `Viral Load Suppression`, `Consensus Population Size Estimate`)%>%
  gt() %>%
  cols_label(
    `HIV Prevalence` = md("HIV Prevalence <br> (95% CI)"),
    `Viral Load Suppression` = md("Viral Load Suppression <br> (95% CI)"),
    `Consensus Population Size Estimate` = md("Consensus Population Size Estimate <br> (95% CI)")
  )%>%
  cols_align(
    align = c("center"),
    columns = -c("TYPOLOGY")
  )%>%
  tab_style(
    style = list(cell_borders(sides = "all", color = "gray", weight = px(1)),
                 cell_text(weight = "bold", color = "black")),
    locations = cells_body()
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold", color = "black"),
      cell_fill(color = "#FFFDD0")
    ),
    locations = cells_column_labels(everything())
  ) %>%
  tab_style(
    style = list(
      cell_text(weight = "bold", color = "black"),
      cell_fill(color = "#FFFDD0")
    ),
    locations = cells_column_spanners()
  ) %>%
  opt_table_font(
    font = list(
      google_font(name = "Cambria")
    )
  )%>%
tab_options(table.width = pct(100), 
            data_row.padding = px(2)) %>%
  tab_footnote(
    footnote = md("**CI**: Confidence Interval (except for population size estimate: Credible Interval)")
  )

```



## KEY RESULTS, BY TYPOLOGY

### Age distribution of respondents

```{r}
#| message: false
#| echo: false
#| warning: false
#| fig-height: 6
#| fig-width: 8


library(RColorBrewer)

# Define the order of the age groups
age_order <- c("18-24", "25-34", "35-44", "45-54", "55+")

# Choose a color from RColorBrewer
bar_color <- brewer.pal(9, "Set1")[2]  # You can change the palette and index as needed

# Filter and prepare the data
filtered_data <- respondent_dist %>%
  filter(COUNTY == county) %>%
  group_by(COUNTY, TYPOLOGY) %>%
  arrange(factor(AGE, levels = age_order)) %>%
  mutate(TOTAL_PARTICIPANTS_TYP = sum(NUMBER_OF_PARTICIPANTS)) %>%
  ungroup() %>%
  mutate(PERCENTAGE = (NUMBER_OF_PARTICIPANTS / TOTAL_PARTICIPANTS_TYP)) %>%
  select(COUNTY, TYPOLOGY, AGE, NUMBER_OF_PARTICIPANTS, PERCENTAGE) %>%
  mutate(label_text = paste0(label_percent(accuracy = 1)(PERCENTAGE), "\n(", NUMBER_OF_PARTICIPANTS, ")")) %>%
  filter(!is.na(NUMBER_OF_PARTICIPANTS))

# Filter and prepare the data
filtered_data <- respondent_dist %>%
  filter(COUNTY == county) %>%
  group_by(COUNTY, TYPOLOGY) %>%
  arrange(factor(AGE, levels = age_order)) %>%
  mutate(TOTAL_PARTICIPANTS_TYP = sum(NUMBER_OF_PARTICIPANTS)) %>%
  ungroup() %>%
  mutate(PERCENTAGE = (NUMBER_OF_PARTICIPANTS / TOTAL_PARTICIPANTS_TYP)) %>%
  select(COUNTY, TYPOLOGY, AGE, NUMBER_OF_PARTICIPANTS, PERCENTAGE) %>%
  mutate(label_text = paste0(label_percent(accuracy = 1)(PERCENTAGE), "\n(", NUMBER_OF_PARTICIPANTS, ")")) %>%
  filter(!is.na(NUMBER_OF_PARTICIPANTS))

# Calculate the maximum percentage and add a buffer
max_percentage <- max(filtered_data$PERCENTAGE, na.rm = TRUE)
buffer <- 0.15  # You can adjust the buffer value as needed

# Check if there are records to plot
if (nrow(filtered_data) > 0) {
  # Create the plot
  ggplot(filtered_data, aes(x = factor(AGE, levels = age_order), y = PERCENTAGE)) +
    scale_y_continuous(labels = scales::label_percent(accuracy = 1), limits = c(0, max_percentage + buffer)) +
    geom_bar(stat = "identity", fill = bar_color) +
    geom_text(aes(label = label_text), vjust = -0.5, color = "black", size = 3.5) +
    facet_wrap(~ TYPOLOGY, scales = "fixed") +
    labs(x = "Age",
         y = "Percentage") +
    theme_minimal() +
    theme(
      strip.background = element_rect(fill = "lightblue", color = "black"),
      strip.text = element_text(face = "bold", size = 14)
    )
} else {
  message("No records to plot")
}


```


## KEY RESULTS, BY TYPOLOGY

### HIV Prevalence


### Viral Load Suppression

## PROGRESS TOWARDS 95-95-95

### Unconditional 95-95-95




### Conditional 95-95-95


## STI Prevalence


















